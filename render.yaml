services:
  - type: web
    name: music-recommendations
    env: python
    plan: starter
    
    buildCommand: |
      # Install dependencies
      pip install --upgrade pip --no-cache-dir
      
      # Core application dependencies
      pip install --no-cache-dir Flask==3.0.0 gunicorn==21.2.0
      pip install --no-cache-dir asyncpg>=0.30.0 psycopg2-binary>=2.9.7
      pip install --no-cache-dir numpy>=1.26.0 python-dotenv>=1.0.0
      
      # ML dependencies - CPU optimized
      pip install --no-cache-dir torch>=2.1.2 --index-url https://download.pytorch.org/whl/cpu
      pip install --no-cache-dir sentence-transformers>=2.3.0
      
      # Pre-cache model to improve startup time
      python3 -c "
      import os
      os.makedirs('/tmp/sentence_transformers', exist_ok=True)
      os.environ['SENTENCE_TRANSFORMERS_HOME'] = '/tmp/sentence_transformers'
      os.environ['TOKENIZERS_PARALLELISM'] = 'false'
      
      from sentence_transformers import SentenceTransformer
      model = SentenceTransformer('paraphrase-MiniLM-L3-v2', cache_folder='/tmp/sentence_transformers', device='cpu')
      print(f'Model cached successfully: {model.get_sentence_embedding_dimension()} dimensions')
      "
    
    startCommand: |
      # Configure Python environment for production
      export PYTHONUNBUFFERED=1
      export PYTHONDONTWRITEBYTECODE=1
      export TOKENIZERS_PARALLELISM=false
      export OMP_NUM_THREADS=1
      
      # Start application server
      exec gunicorn --bind 0.0.0.0:$PORT app:app \
        --workers 1 \
        --timeout 240 \
        --worker-class sync \
        --max-requests 50 \
        --worker-tmp-dir /dev/shm \
        --preload \
        --log-level info \
        --access-logfile - \
        --error-logfile -
    
    envVars:
      # Model configuration
      - key: SENTENCE_TRANSFORMER_MODEL
        value: paraphrase-MiniLM-L3-v2
        
      # Python optimization
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PYTHONDONTWRITEBYTECODE
        value: "1"
      - key: TOKENIZERS_PARALLELISM
        value: "false"
      - key: OMP_NUM_THREADS
        value: "1"
      
      # Database configuration
      - key: DB_MIN_POOL_SIZE
        value: "1"
      - key: DB_MAX_POOL_SIZE
        value: "2"
      - key: DB_COMMAND_TIMEOUT
        value: "60"
      
      # Application settings
      - key: OPTIMIZE_FOR_MEMORY
        value: "true"
      - key: MODEL_CACHE_DIR
        value: /tmp/sentence_transformers
      - key: MAX_RECOMMENDATION_LIMIT
        value: "10"
      - key: DEFAULT_RECOMMENDATION_LIMIT
        value: "5"
      
      # pgvector optimizations for Kaggle dataset
      - key: USE_HALFVEC
        value: "true"
      - key: MAX_KAGGLE_SONGS
        value: "50000"
      - key: EMBEDDING_BATCH_SIZE
        value: "50"
      
      # Runtime configuration
      - key: DATABASE_URL
        fromDatabase:
          name: music-recommendations-db
          property: connectionString
      - key: FLASK_ENV
        value: production
      - key: FLASK_DEBUG
        value: "false"
      - key: SECRET_KEY
        generateValue: true
      - key: LOG_LEVEL
        value: INFO
      - key: HOST
        value: "0.0.0.0"

databases:
  - name: music-recommendations-db
    databaseName: music_recommendations
    user: music_user
    plan: free
    postgresMajorVersion: 16  # PostgreSQL 16 has pgvector 0.7.0+ with halfvec support